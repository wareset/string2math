/* eslint-disable */
var t=Array.prototype.concat;function r(){return t.apply([],arguments)}function e(t){return t[t.length-1]}var s=Array.prototype.push;function i(t){return t?t.toArray():["NaN"]}function n(t,r){return t?t.calculate(r):NaN}class ProgramNode{constructor(t){this.type="Program",this.is=t}toArray(){return i(this.is)}toString(){return""+(this.is||NaN)}calculate(t){return n(this.is,t)}}class GroupingNode{constructor(t){this.type="Grouping",this.is=t}toArray(){return i(this.is)}toString(){return""+(this.is||NaN)}calculate(t){return n(this.is,t)}}class TernaryNode{constructor(t,r,e){this.type="Ternary",this.is=e,this.isTrue=r,this.isFalse=t}toArray(){return r("(",i(this.is),"?",i(this.isTrue),":",i(this.isFalse),")")}toString(){return`(${this.is||NaN} ? ${this.isTrue||NaN} : ${this.isFalse||NaN})`}calculate(t){return n(this.is,t)?n(this.isTrue,t):n(this.isFalse,t)}}class ConstantNode{constructor(t){this.type="Constant",this.is=t}toArray(){return[this.is]}toString(){return""+this.is}calculate(t){var r=this.is;if(t)for(var e,s=t.length;s-- >0;)if(r in(e=t[s])&&"function"!=typeof(e=e[r]))return e;var i=+r;return i==i||"NaN"===r?i:r}}function a(t,e){return 0===e?t.toArray():r(",",t.toArray())}function u(t){return t.calculate(this)}class FunctionNode{constructor(t,r){this.type="Function",this.is=t,this.isArgs=r}toArray(){return r(this.is+"(",t.apply([],this.isArgs.map(a)),")")}toString(){return`${this.is}(${this.isArgs.join(", ")})`}calculate(t){var r=this.is;if(t)for(var e,s=t.length;s-- >0;)if(r in(e=t[s])&&"function"==typeof(e=e[r]))return e.apply(void 0,this.isArgs.map(u,t));return NaN}}class OperatorNode{constructor(t,r,e){this.type="Operator",this.is=t,this.isLeft=e,this.isRight=r}toArray(){var t=this.is,e=this.isLeft,s=this.isRight,n=i(e),a=i(s);return s?e?"!"===t||"~"===t?["NaN"]:r("(",n,t,a,")"):"!"===t||"~"===t||"-"===t?r(t,a):a:n}toString(){var t=this.is,r=this.isLeft,e=this.isRight,s=""+(r||NaN),i=""+(e||NaN);return e?r?"!"===t||"~"===t?"NaN":`(${s} ${t} ${i})`:"!"===t||"~"===t||"-"===t?t+i:i:s}calculate(t){var r,e=this.is,s=this.isLeft,i=this.isRight,a=n(s,t),u=n(i,t);if(!i)return a;if(t)for(var c,o=t.length;o-- >0;)if(e in(c=t[o])&&"function"==typeof(c=c[e])){r=c;break}if(!s){switch(e){case"!":return r?r(u):+!+u;case"~":return r?r(u):~+u;case"+":return r?r(null,u):+u;case"-":return r?r(null,u):-+u}return u}if(r)return r(a,u);switch(a=+a,u=+u,e){case"**":return Math.pow(a,u);case"*":return a*u;case"/":return a/u;case"%":return a%u;case"+":return a+u;case"-":return a-u;case"<<":return a<<u;case">>":return a>>u;case">>>":return a>>>u;case"<":return a<u?1:0;case"<=":return a<=u?1:0;case">":return a>u?1:0;case">=":return a>=u?1:0;case"=":case"==":return a==u?1:0;case"===":return a===u?1:0;case"!=":return a!=u?1:0;case"!==":return a!==u?1:0;case"&":return a&u;case"^":return a^u;case"|":return a|u;case"&&":return a?u:a;case"||":return a||u;case"??":return a==a?a:u}return NaN}}var c=/\?\??|\|\|?|\*\*?|&&?|<<|>>>?|[!=]=?=?|[<>]=?|(?<!\d\.?[eE])[-+]|[,:~^%/()[\]]/g,o={"!":14,"~":14,"**":13,"*":12,"/":12,"%":12,"+":11,"-":11,"<<":10,">>":10,">>>":10,"<":9,"<=":9,">":9,">=":9,"=":8,"==":8,"!=":8,"===":8,"!==":8,"&":7,"^":6,"|":5,"&&":4,"||":3,"??":3,"?":2,":":2,",":1};function h(t,s,i,n,a,u,c){if(u[s]&&u[s].length)for(var o,l=u[s],f=l.length;f-- >0;)if((o=l[f]-i)>-1&&o<t.length)return l.splice(f,1),r(h(t.slice(0,o),s,i,n,a,u,c),h(t.slice(o+1),s,i+o+1,n,a,u,c));if(a[s]&&a[s].length)for(var p,N,g=a[s],y=g.length;y-- >0;)if(p=g[y].f-i,N=g[y].s-i,p>-1&&p<t.length&&N>p)return g.splice(y,1),new TernaryNode(e(r(h(t.slice(N+1),s,i+N+1,n,a,u,c))),e(r(h(t.slice(p+1,N),s,i+p+1,n,a,u,c))),e(r(h(t.slice(0,p),s,i,n,a,u,c))));if(c[s]&&c[s].length)for(var d,v=c[s],A=v.length;A-- >0;)if((d=v[A]-i)>-1&&d<t.length)return v.splice(A,1),new OperatorNode(t[d],e(r(h(t.slice(d+1),s,i+d+1,n,a,u,c))),e(r(h(t.slice(0,d),s,i,n,a,u,c))));if(n[s]&&n[s].length)for(var w,b,k=n[s],m=k.length;m-- >0;)if(w=k[m].f-i,b=k[m].s-i,w>-1&&w<t.length&&b>w)return k.splice(m,1),"("===t[w]?new GroupingNode(e(r(h(t.slice(w+1,b),s+1,i+w+1,n,a,u,c)))):new FunctionNode(t[w],r(h(t.slice(w+2,b),s+1,i+w+2,n,a,u,c)));var x=t.join("");return x?new ConstantNode(x):[]}function l(t,r,e,s){t[r]||(t[r]=[]),t[r][e]||(t[r][e]=[]),t[r][e][e===o["**"]?"unshift":"push"](s.length)}function f(t,r,e){l(t,r,o["*"],e),e.push("*")}function p(t){t="("+t+")";var i,n,a,u,p,N=[],g=0,y="",d=0,v=0,A={},w={},b={},k={},m=o["!"],x={},F={},T={};for(c.lastIndex=0;p=c.exec(t);)switch(i=p[0]){case"[":v++;break;case"]":v--;break;default:if(0!==v)break;switch(p.index>g&&(n=t.slice(g,p.index).trim())&&(")"===y&&f(T,d,N),N.push(y=n)),i){case"(":w[d]||(w[d]=[]),w[d].push({f:N.length,s:-1}),!y||"("===y||o[y]>0||(t[p.index-1].trim()&&"NaN"!==y&&""+ +y=="NaN"?(a=w[d]&&e(w[d]))&&a.f--:(f(T,d,N),(a=w[d]&&e(w[d]))&&a.f++)),d++;break;case")":(a=w[--d]&&e(w[d]))&&(a.s=N.length,(A[d]||(A[d]=[])).push(w[d].pop()));break;default:switch(")"!==y||o[i]>0||(f(T,d,N),y="*"),i){case",":x[d]||(x[d]=[]),x[d].push(N.length);break;case"?":k[d]||(k[d]=[]),k[d].push({f:N.length,s:-1});break;case":":(a=k[d]&&e(k[d]))&&(a.s=N.length,(b[d]||(b[d]=[])).push(k[d].pop()));break;default:if("("===y||o[y]>0){if("-"!==i&&"!"!==i&&"~"!==i){g=p.index+i.length;continue}u=++m}else u=o[i];l(T,d,u,N)}}g=p.index+i.length,N.push(y=i)}for(var $ in T){F[$]=[];for(var S=T[$],C=S.length;C-- >0;)S[C]&&s.apply(F[$],S[C])}return new ProgramNode(e(r(h(N.slice(1,-1),1,1,A,b,x,F))))}export{ConstantNode,FunctionNode,GroupingNode,OperatorNode,ProgramNode,TernaryNode,p as create};
