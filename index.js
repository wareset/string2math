/* eslint-disable */
var r=Array.prototype.concat;function t(){return r.apply([],arguments)}function e(r){return r[r.length-1]}var s=Array.prototype.push;function i(r){return r?r.toArray():["NaN"]}function n(r,t){return r?r.calculate(t):NaN}class ProgramNode{constructor(r){this.type="Program",this.is=r}toArray(){return i(this.is)}toString(){return""+(this.is||NaN)}calculate(r){return n(this.is,r)}}class GroupingNode{constructor(r){this.type="Grouping",this.is=r}toArray(){return i(this.is)}toString(){return""+(this.is||NaN)}calculate(r){return n(this.is,r)}}class TernaryNode{constructor(r,t,e){this.type="Ternary",this.is=e,this.isTrue=t,this.isFalse=r}toArray(){return t("(",i(this.is),"?",i(this.isTrue),":",i(this.isFalse),")")}toString(){return`(${this.is||NaN} ? ${this.isTrue||NaN} : ${this.isFalse||NaN})`}calculate(r){return n(this.is,r)?n(this.isTrue,r):n(this.isFalse,r)}}class ConstantNode{constructor(r){this.type="Constant",this.is=r}toArray(){return[this.is]}toString(){return""+this.is}calculate(r){var t=this.is;if(r)for(var e,s=r.length;s-- >0;)if(t in(e=r[s])&&"function"!=typeof(e=e[t]))return e;var i=+t;return i==i||"NaN"===t?i:t}}function a(r,e){return 0===e?r.toArray():t(",",r.toArray())}function o(r){return r.calculate(this)}class FunctionNode{constructor(r,t){this.type="Function",this.is=r,this.isArgs=t}toArray(){return t(this.is+"(",r.apply([],this.isArgs.map(a)),")")}toString(){return`${this.is}(${this.isArgs.join(", ")})`}calculate(r){var t=this.is;if(r)for(var e,s=r.length;s-- >0;)if(t in(e=r[s])&&"function"==typeof(e=e[t]))return e.apply(void 0,this.isArgs.map(o,r));return NaN}}class OperatorNode{constructor(r,t,e){this.type="Operator",this.is=r,this.isLeft=e,this.isRight=t}toArray(){var r=this.is,e=this.isLeft,s=this.isRight,n=i(e),a=i(s);return s?e?"!"===r||"~"===r?["NaN"]:t("(",n,r,a,")"):"!"===r||"~"===r||"-"===r?t(r,a):a:n}toString(){var r=this.is,t=this.isLeft,e=this.isRight,s=""+(t||NaN),i=""+(e||NaN);return e?t?"!"===r||"~"===r?"NaN":`(${s} ${r} ${i})`:"!"===r||"~"===r||"-"===r?r+i:i:s}calculate(r){var t,e=this.is,s=this.isLeft,i=this.isRight,a=n(s,r),o=n(i,r);if(!i)return a;if(r)for(var u,c=r.length;c-- >0;)if(e in(u=r[c])&&"function"==typeof(u=u[e])){t=u;break}if(!s){switch(e){case"!":return t?t(o):+!+o;case"~":return t?t(o):~+o;case"+":return t?t(null,o):+o;case"-":return t?t(null,o):-+o}return o}if(t)return t(a,o);switch(a=+a,o=+o,e){case"**":return Math.pow(a,o);case"*":return a*o;case"/":return a/o;case"%":return a%o;case"+":return a+o;case"-":return a-o;case"<<":return a<<o;case">>":return a>>o;case">>>":return a>>>o;case"<":return a<o?1:0;case"<=":return a<=o?1:0;case">":return a>o?1:0;case">=":return a>=o?1:0;case"=":case"==":return a==o?1:0;case"===":return a===o?1:0;case"!=":return a!=o?1:0;case"!==":return a!==o?1:0;case"&":return a&o;case"^":return a^o;case"|":return a|o;case"&&":return a?o:a;case"||":return a||o;case"??":return a==a?a:o}return NaN}}var u=/\?\??|\|\|?|\*\*?|&&?|<<|>>>?|[!=]=?=?|[<>]=?|(?<!\d\.?[eE])[-+]|[,:~^%/()[\]]/g,c={"!":14,"~":14,"**":13,"*":12,"/":12,"%":12,"+":11,"-":11,"<<":10,">>":10,">>>":10,"<":9,"<=":9,">":9,">=":9,"=":8,"==":8,"!=":8,"===":8,"!==":8,"&":7,"^":6,"|":5,"&&":4,"||":3,"??":3,"?":2,":":2,",":1};function h(r,s,i,n,a,o,u){if(o[s]&&o[s].length)for(var c,l=o[s],f=l.length;f-- >0;)if((c=l[f]-i)>-1&&c<r.length)return l.splice(f,1),t(h(r.slice(0,c),s,i,n,a,o,u),h(r.slice(c+1),s,i+c+1,n,a,o,u));if(a[s]&&a[s].length)for(var p,N,g=a[s],d=g.length;d-- >0;)if(p=g[d].f-i,N=g[d].s-i,p>-1&&p<r.length&&N>p)return g.splice(d,1),new TernaryNode(e(t(h(r.slice(N+1),s,i+N+1,n,a,o,u))),e(t(h(r.slice(p+1,N),s,i+p+1,n,a,o,u))),e(t(h(r.slice(0,p),s,i,n,a,o,u))));if(u[s]&&u[s].length)for(var y,v=u[s],A=v.length;A-- >0;)if((y=v[A]-i)>-1&&y<r.length)return v.splice(A,1),new OperatorNode(r[y],e(t(h(r.slice(y+1),s,i+y+1,n,a,o,u))),e(t(h(r.slice(0,y),s,i,n,a,o,u))));if(n[s]&&n[s].length)for(var x,w,b=n[s],k=b.length;k-- >0;)if(x=b[k].f-i,w=b[k].s-i,x>-1&&x<r.length&&w>x)return b.splice(k,1),"("===r[x]?new GroupingNode(e(t(h(r.slice(x+1,w),s+1,i+x+1,n,a,o,u)))):new FunctionNode(r[x],t(h(r.slice(x+2,w),s+1,i+x+2,n,a,o,u)));var m=r.join("");return m?new ConstantNode(m):[]}function l(r,t,e,s){r[t]||(r[t]=[]),r[t][e]||(r[t][e]=[]),r[t][e][e===c["**"]?"unshift":"push"](s.length)}function f(r,t,e){l(r,t,c["*"],e),e.push("*")}exports.ConstantNode=ConstantNode,exports.FunctionNode=FunctionNode,exports.GroupingNode=GroupingNode,exports.OperatorNode=OperatorNode,exports.ProgramNode=ProgramNode,exports.TernaryNode=TernaryNode,exports.create=function(r){r="("+r+")";var i,n,a,o,p,N=[],g=0,d="",y=0,v=0,A={},x={},w={},b={},k=c["!"],m={},F={},T={};for(u.lastIndex=0;p=u.exec(r);)switch(i=p[0]){case"[":v++;break;case"]":v--;break;default:if(0!==v)break;switch(p.index>g&&(n=r.slice(g,p.index).trim())&&(")"===d&&f(T,y,N),N.push(d=n)),i){case"(":x[y]||(x[y]=[]),x[y].push({f:N.length,s:-1}),!d||"("===d||c[d]>0||(r[p.index-1].trim()&&"NaN"!==d&&""+ +d=="NaN"?(a=x[y]&&e(x[y]))&&a.f--:(f(T,y,N),(a=x[y]&&e(x[y]))&&a.f++)),y++;break;case")":(a=x[--y]&&e(x[y]))&&(a.s=N.length,(A[y]||(A[y]=[])).push(x[y].pop()));break;default:switch(")"!==d||c[i]>0||(f(T,y,N),d="*"),i){case",":m[y]||(m[y]=[]),m[y].push(N.length);break;case"?":b[y]||(b[y]=[]),b[y].push({f:N.length,s:-1});break;case":":(a=b[y]&&e(b[y]))&&(a.s=N.length,(w[y]||(w[y]=[])).push(b[y].pop()));break;default:if("("===d||c[d]>0){if("-"!==i&&"!"!==i&&"~"!==i){g=p.index+i.length;continue}o=++k}else o=c[i];l(T,y,o,N)}}g=p.index+i.length,N.push(d=i)}for(var $ in T){F[$]=[];for(var S=T[$],C=S.length;C-- >0;)S[C]&&s.apply(F[$],S[C])}return new ProgramNode(e(t(h(N.slice(1,-1),1,1,A,w,m,F))))};
