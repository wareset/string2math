/* eslint-disable */
function t(t){return t?t.toArray():[NaN]}function e(t,e){return t?t.calculate.apply(t,e):NaN}function r(t){return"function"==typeof t}Object.defineProperty(exports,"__esModule",{value:!0});var n=Object.hasOwn||function(t,e){return Object.prototype.hasOwnProperty.call(t,e)};class ProgramNode{constructor(t){this.type="Program",this.nodeChild=t}toArray(){return t(this.nodeChild)}toString(){return""+(this.nodeChild||NaN)}calculate(...t){return e(this.nodeChild,t)}}class ConditionNode{constructor(t,e,r){this.type="Condition",this.nodeIf=t,this.nodeThen=e,this.nodeElse=r}toArray(){return["("].concat(t(this.nodeIf),"?",t(this.nodeThen),":",t(this.nodeElse),")")}toString(){return`(${this.nodeIf||NaN} ? ${this.nodeThen||NaN} : ${this.nodeElse||NaN})`}calculate(...t){return e(this.nodeIf,t)?e(this.nodeThen,t):e(this.nodeElse,t)}}class VariableNode{constructor(t){this.type="Variable",this.variable=t}toArray(){return[this.variable]}toString(){return""+this.variable}calculate(...t){if(t)for(var e,r=t.length,o=this.variable;r-- >0;)if(n(e=t[r],o))return e[o];return NaN}}class ConstantNode{constructor(t){this.type="Constant",this.constant=t}toArray(){return[this.constant]}toString(){return""+this.constant}calculate(...t){return this.constant}}class FunctionNode{constructor(t,e){this.type="Function",this.function=t,this.nodeListOfArgs=e}toArray(){return[this.function+"("].concat(Array.prototype.concat.apply([],this.nodeListOfArgs.map((function(e,r){return 0===r?t(e):[","].concat(t(e))}))),")")}toString(){return`${this.function}(${this.nodeListOfArgs.join(", ")})`}calculate(...t){var e=this.function;if(t)for(var o,a=t.length;a-- >0;)if(n(o=t[a],e)&&r(o=o[e]))return o.apply(void 0,this.nodeListOfArgs.map((function(t){return t?t.calculate.apply(t,this):NaN}),t));return NaN}}class OperatorNode{constructor(t,e,r){this.type="Operator",this.operator=t,this.nodeLeft=e,this.nodeRight=r}toArray(){var e=this.operator,r=this.nodeLeft,n=this.nodeRight;return n?r?"!"===e||"~"===e?[NaN]:["("].concat(t(r),e,t(n),")"):"!"===e||"~"===e||"-"===e||"+"===e?[e].concat(t(n)):t(n):t(r)}toString(){var t=this.operator,e=this.nodeLeft,r=this.nodeRight,n=""+(e||NaN),o=""+(r||NaN);return r?e?"!"===t||"~"===t?"NaN":`(${n} ${t} ${o})`:"!"===t||"~"===t||"-"===t||"+"===t?t+o:o:n}calculate(...t){var o=this.operator,a=this.nodeLeft,s=this.nodeRight,i=e(a,t);if(!s)return i;var c,u=e(s,t);if(t)for(var h,l=t.length;l-- >0;)if(n(h=t[l],o)&&r(h=h[o])){c=h;break}if(!a){switch(o){case"!":return c?c(u):+!+u;case"~":return c?c(u):~+u;case"+":return c?c(0,u):+u;case"-":return c?c(0,u):-+u}return u}if(c)return c(i,u);switch(i=+i,u=+u,o){case"**":return Math.pow(i,u);case"*":return i*u;case"/":return i/u;case"%":return i%u;case"+":return i+u;case"-":return i-u;case"<<":return i<<u;case">>":return i>>u;case">>>":return i>>>u;case"<":return i<u?1:0;case"<=":return i<=u?1:0;case">":return i>u?1:0;case">=":return i>=u?1:0;case"=":case"==":return i==u?1:0;case"===":return i===u?1:0;case"!=":return i!=u?1:0;case"!==":return i!==u?1:0;case"&":return i&u;case"^":return i^u;case"|":return i|u;case"&&":return i?u:i;case"||":return i||u;case"??":return i==i?i:u}return NaN}}var o=/\?\??|\|\|?|\*\*?|&&?|<<|>>>?|[!=]=?=?|[<>]=?|(?<!\d\.?[eE])[-+]|[-+](?!\d)|[,:~^%/()[\]]/g,a=/^(\d*\.?\d*[eE]?[-+]?\d+)\s*([^]*)$/,s={"!":14,"~":14,"**":13,"*":12,"/":12,"%":12,"+":11,"-":11,"<<":10,">>":10,">>>":10,"<":9,"<=":9,">":9,">=":9,"=":8,"==":8,"!=":8,"===":8,"!==":8,"&":7,"^":6,"|":5,"&&":4,"||":3,"??":3,"?":2,":":2,",":1};function i(t){return t[t.length-1]}function c(t,e,r,n,o,a,s){var u,h,l,d;if(a[e]&&a[e].length)for(h=(u=a[e]).length;h-- >0;)if((l=u[h]-r)>-1&&l<t.length)return u.splice(h,1),[].concat(c(t.slice(0,l),e,r,n,o,a,s),c(t.slice(l+1),e,r+l+1,n,o,a,s));if(o[e]&&o[e].length)for(h=(u=o[e]).length;h-- >0;)if((l=u[h].f-r)>-1&&l<t.length&&(d=u[h].s-r)>l){u.splice(h,1);var f=i([].concat(c(t.slice(d+1),e,r+d+1,n,o,a,s))),p=i([].concat(c(t.slice(l+1,d),e,r+l+1,n,o,a,s))),N=i([].concat(c(t.slice(0,l),e,r,n,o,a,s)));return new ConditionNode(N,p,f)}if(s[e]&&s[e].length)for(h=(u=s[e]).length;h-- >0;)if((l=u[h]-r)>-1&&l<t.length){u.splice(h,1);var g=i([].concat(c(t.slice(l+1),e,r+l+1,n,o,a,s))),y=i([].concat(c(t.slice(0,l),e,r,n,o,a,s)));return new OperatorNode(t[l],y,g)}if(n[e]&&n[e].length)for(h=(u=n[e]).length;h-- >0;)if((l=u[h].f-r)>-1&&l<t.length&&(d=u[h].s-r)>l)return u.splice(h,1),"("===t[l]?i([].concat(c(t.slice(l+1,d),e+1,r+l+1,n,o,a,s))):new FunctionNode(t[l],[].concat(c(t.slice(l+2,d),e+1,r+l+2,n,o,a,s)));return(d=t.join(""))?(l=+d)!==l&&"NaN"!==d?new VariableNode(d):new ConstantNode(l):[]}function u(t,e,r,n){t[e]||(t[e]=[]),t[e][r]||(t[e][r]=[]),t[e][r][r===s["**"]?"unshift":"push"](n.length)}function h(t,e,r){u(t,e,s["*"],r),r.push("*")}exports.ConditionNode=ConditionNode,exports.ConstantNode=ConstantNode,exports.FunctionNode=FunctionNode,exports.OperatorNode=OperatorNode,exports.ProgramNode=ProgramNode,exports.VariableNode=VariableNode,exports.default=function(t){t="("+t+")",o.lastIndex=0;for(var e,r,n,l,d,f,p=[],N=0,g="",y=0,v=0,b={},x={},w={},C={},O=s["!"],A={},m={},k={};d=o.exec(t);)switch(e=d[0]){case"[":v++;break;case"]":v--;break;default:if(0!==v)break;switch(d.index>N&&(r=t.slice(N,d.index).trim())&&(")"===g&&h(k,y,p),(f=r.match(a))&&("."===(r=f[1])[0]&&(r="0"+r),f[2]&&(p.push(r),h(k,y,p),r=f[2])),p.push(g=r)),e){case"(":(x[y]||(x[y]=[])).push({f:p.length,s:-1}),!g||"("===g||s[g]>0||(t[d.index-1].trim()&&"NaN"!==g&&""+ +g=="NaN"?(n=x[y]&&i(x[y]))&&n.f--:(h(k,y,p),(n=x[y]&&i(x[y]))&&n.f++)),y++;break;case")":(n=x[--y]&&i(x[y]))&&(n.s=p.length,(b[y]||(b[y]=[])).push(x[y].pop()));break;default:switch(")"!==g||s[e]>0||(h(k,y,p),g="*"),e){case",":(A[y]||(A[y]=[])).push(p.length);break;case"?":(C[y]||(C[y]=[])).push({f:p.length,s:-1});break;case":":(n=C[y]&&i(C[y]))&&(n.s=p.length,(w[y]||(w[y]=[])).push(C[y].pop()));break;default:if("("===g||s[g]>0){if("+"!==e&&"-"!==e&&"!"!==e&&"~"!==e){N=d.index+e.length;continue}l=++O}else l=s[e];u(k,y,l,p)}}N=d.index+e.length,p.push(g=e)}var $=Array.prototype.push;for(var L in k){m[L]=[];for(var P=k[L],E=P.length;E-- >0;)P[E]&&$.apply(m[L],P[E])}return new ProgramNode(i([].concat(c(p.slice(1,-1),1,1,b,w,A,m))))};
